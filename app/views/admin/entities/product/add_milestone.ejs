<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<style>

  /* Ensure container is centered */
.container {
  max-width: 700px;
  margin: auto;
}

/* Form fields */
.form-control {
  font-size: 1rem;
  padding: 12px;
  border-radius: 10px;
  border: 2px solid #007bff;
  width: 100%;
}

/* Buttons */
.btn {
  font-size: 1rem;
  padding: 10px 15px;
}

/* Task Input Group */
.task-input-group {
  display: flex;
  align-items: center;
}

.task-input-group .remove-task {
  margin-left: 10px;
}

#add-task {
  background-color: #28a745;
  color: white;
  border-radius: 30px;
}

  /* General Styling */
body {
  background-color: #f8f9fa; /* Light background */
}

/* Centering the card */
.card {
  border-radius: 12px;
  overflow: hidden;
}

/* Card Header */
.card-header {
  font-size: 1.25rem;
  font-weight: bold;
  background: linear-gradient(135deg, #007bff, #0056b3);
  color: white;
  text-transform: uppercase;
}

/* Form Input Fields */
.form-control {
  font-size: 1rem;
  padding: 10px 15px;
  border-radius: 50px; /* Rounded inputs */
  border: 2px solid #007bff;
  transition: 0.3s;
}

.form-control:focus {
  border-color: #0056b3;
  box-shadow: 0 0 5px rgba(0, 91, 187, 0.5);
}

/* Task Input Fields */
.task-input-group {
  position: relative;
}

.task-input-group input {
  flex: 1;
}

/* Buttons */
.btn {
  font-size: 1rem;
  padding: 10px 15px;
  transition: all 0.3s ease;
}

/* Add Task Button */
#add-task {
  background-color: #28a745;
  color: white;
  border-radius: 50px;
}

#add-task:hover {
  background-color: #218838;
}

/* Remove Task Button */
.remove-task {
  border-radius: 50px;
  padding: 10px 12px;
}

/* Submit Button */
.btn-primary {
  background: linear-gradient(135deg, #007bff, #0056b3);
  border: none;
  border-radius: 50px;
  font-size: 1.1rem;
}
/* Fix for Date Input */
#due_date {
  width: 100%; /* Ensure full width */
  height: 45px; /* Set height for consistency */
  padding: 10px 15px;
  border: 2px solid #007bff;
  border-radius: 25px; /* Adjust for smooth pill shape */
  font-size: 1rem;
  appearance: none; /* Removes default styling */
  position: relative;
}

/* Ensure the calendar icon aligns properly */
#due_date::-webkit-calendar-picker-indicator {
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  opacity: 0.8;
  font-size: 1.2rem;
}


.btn-primary:hover {
  background: linear-gradient(135deg, #0056b3, #003580);
}

/* Description Textarea */
textarea {
  border-radius: 12px;
}

</style>
<%- contentFor('content_header') %>
<div class="row mb-2">
    <div class="col-sm-6">
      
      <h1 class="m-0" style="display: inline-block;"><%= data.header %></h1> &nbsp;&nbsp;&nbsp;
        <div class="" style="display: inline-block;">

          <ol class="breadcrumb">
            <% data.breadcrumbs.forEach((crumb) => { %>
              <li class="breadcrumb-item <%= crumb.link === '#' ? 'active' : '' %>">
                <% if (crumb.link !== '#') { %>
                  <a href="<%= crumb.link %>">
                    <% if (crumb.icon) { %>
                      <i class="<%= crumb.icon %>"></i>  <!-- Render the icon -->
                    <% } %>
                    <%= crumb.text %>
                  </a>
                <% } else { %>
                  <% if (crumb.icon) { %>
                    <i class="<%= crumb.icon %>"></i>  <!-- Render the icon for active item -->
                  <% } %>
                  <%= crumb.text %>  <!-- Text for active breadcrumb -->
                <% } %>
              </li>
            <% }); %>
          </ol>
      </div>
    </div><!-- /.col -->
    <div class="col-sm-6 text-right">
        <!-- <div class="btn btn-primary mr-2"><i class="bi bi-floppy"></i>&nbsp;&nbsp;Save</div> -->
    </div><!-- /.col -->
  </div><!-- /.row -->

  <%- contentFor('content') %>


  <!-- Add Milestone Form -->
<!-- <div class="row">
    <div class="col-md-6">
        <form action="/admin/api/insert_milestone" method="POST">
            <div class="form-group">
                <label for="milestone">Milestone</label>
                <input type="text" id="milestone" name="milestone" class="form-control" required>
            </div>

            <div class="form-group">
                <label for="due_date">Due Date</label>
                <input type="date" id="due_date" name="due_date" class="form-control" required>
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" name="description" class="form-control" rows="4" required></textarea>
            </div>

            <div class="form-group">
           <div class="btn btn-primary mr-2"><i class="bi bi-floppy"></i>&nbsp;&nbsp;Save Milestone</div>

            </div>
        </form>
    </div>
</div> -->

<!-- Milestone Form  -->
<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
      <div class="card shadow border-0">
        <div class="card-header bg-primary text-white text-center py-3">
          <h5 class="mb-0">Add New Milestone</h5>
        </div>
        <div class="card-body p-4">
          <form action="/admin/milestones/add_milestone" method="POST">
            
            <!-- Milestone Input -->
            <div class="form-group mb-4">
              <label for="milestone" class="form-label fw-bold">
                <i class="bi bi-geo text-primary me-2"></i> Milestone
              </label>
              <input 
                type="text" 
                id="milestone" 
                name="milestone" 
                class="form-control border-primary rounded-pill p-3" 
                placeholder="Enter milestone" 
                required>
            </div>

            <!-- Dynamic Task Input Section -->
            <div class="form-group mb-4">
              <label class="form-label fw-bold">
                <i class="fa-solid fa-list-check text-primary me-2"></i> Assign Tasks
              </label>
              <div id="tasks-container">
                <div class="task-input-group d-flex mb-2">
                  <input type="text" name="tasks[]" class="form-control border-primary rounded-pill p-3" placeholder="Enter task" required>
                  <button type="button" class="btn btn-danger ms-2 remove-task d-none"><i class="bi bi-trash"></i></button>
                </div>
              </div>
              <button type="button" class="btn btn-success mt-2 px-3 py-2" id="add-task">
                <i class="bi bi-plus-circle"></i> Add Task
              </button>
            </div>

            <!-- Due Date Input -->
            <div class="form-group mb-5">
              <label for="due_date" class="form-label fw-bold">
                <i class="bi bi-calendar-date text-primary me-2"></i> Due Date
              </label>
              <input 
                type="date" 
                id="due_date"
                name="due_date" 
                class="form-control"
                required>
            </div>
            
            <!-- Description Input -->
            <div class="form-group mb-4">
              <label for="description" class="form-label fw-bold">
                <i class="bi bi-chat-text text-primary me-2"></i> Description
              </label>
              <textarea 
                id="description" 
                name="description" 
                class="form-control border-primary rounded p-3" 
                placeholder="Enter milestone description" 
                rows="4" 
                required></textarea>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
              <button type="submit" class="btn btn-primary btn-lg rounded-pill">
                <i class="bi bi-save me-2"></i> Save Milestone
              </button>
            </div>

          </form>
        </div>
      </div>
    </div>
  </div> 
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
      const taskContainer = document.getElementById("tasks-container");
      const addTaskBtn = document.getElementById("add-task");
  
      addTaskBtn.addEventListener("click", function() {
          const taskGroup = document.createElement("div");
          taskGroup.classList.add("task-input-group", "d-flex", "mb-2");
  
          const taskInput = document.createElement("input");
          taskInput.type = "text";
          taskInput.name = "tasks[]";
          taskInput.classList.add("form-control", "form-control-lg", "border-primary", "rounded-pill");
          taskInput.placeholder = "Enter task";
          taskInput.required = true;
  
          const removeBtn = document.createElement("button");
          removeBtn.type = "button";
          removeBtn.classList.add("btn", "btn-danger", "ms-2", "remove-task");
          removeBtn.innerHTML = '<i class="bi bi-trash"></i>';
  
          removeBtn.addEventListener("click", function() {
              taskGroup.remove();
          });
  
          taskGroup.appendChild(taskInput);
          taskGroup.appendChild(removeBtn);
          taskContainer.appendChild(taskGroup);
  
          // Ensure remove buttons are visible for all except first task
          document.querySelectorAll(".remove-task").forEach(btn => btn.classList.remove("d-none"));
      });
  
      // Show remove button if more than one task exists
      if (taskContainer.children.length > 1) {
          document.querySelectorAll(".remove-task").forEach(btn => btn.classList.remove("d-none"));
      }
  });
  </script>

